<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 配置自动扫描的包：扫描handler -->
    <context:component-scan base-package="com.atguigu.crowd.mvc"/>

    <!-- 配置SpringMVC的注解驱动 -->
    <mvc:annotation-driven/>

    <!-- 配置视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--配置基于xml的异常映射-->
    <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!--配置异常类型和具体视图页面的对应关系-->
        <property name="exceptionMappings">
            <props>
                <!--key属性指定异常全类型名-->
                <!--标签体中写对应的视图（这个值要拼前后缀得到具体的视图名）-->
                <prop key="java.lang.Exception">system-error</prop>
                <prop key="com.atguigu.crowd.exception.AccessForbiddenException">admin-login</prop>
            </props>
        </property>

        <!-- 使用exceptionAttribute 可以修改异常对象存入请求域时使用的属性名，默认是exception-->
        <!--<property name="exceptionAttribute" value="myException" />-->
    </bean>
    <!--事实证明：基于注解的异常映射优先级大于基于xml的异常映射-->

    <!--
    如果一个handler方法的功能只是跳转到一个jsp页面，可以用view-controller代替该handler方法，直接把请求地址和视图页面关联起来：
        @RequestMapping("/admin/to/login/page.html")
        public String testAdminToLoginPage(){
            return "admin-login";
        }
    -->
    <mvc:view-controller path="/admin/to/login/page.html" view-name="admin-login"/>
    <mvc:view-controller path="/admin/to/main/page.html" view-name="admin-main"/>
    <mvc:view-controller path="/admin/to/add/page.html" view-name="admin-add"/>
    <mvc:view-controller path="/role/to/page.html" view-name="role-page"/>
    <mvc:view-controller path="/menu/to/page.html" view-name="menu-page"/>
    <!-- 注册拦截器-->
    <!--使用SpringSecurity后，当前自定义的拦截器就不再使用了-->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash; mvc:mapping 配置要拦截的资源&ndash;&gt;
            &lt;!&ndash; /*对应一层路径，比如：/aaa &ndash;&gt;
            &lt;!&ndash; /**对应多层路径，比如：/aaa/bbb 或/aaa/bbb/ccc 或/aaa/bbb/ccc/ddd &ndash;&gt;
            <mvc:mapping path="/**"/>
            &lt;!&ndash; mvc:exclude-mapping 配置不拦截的资源&ndash;&gt;
            <mvc:exclude-mapping path="/admin/to/login/page.html"/>
            <mvc:exclude-mapping path="/admin/do/login.html"/>
            <mvc:exclude-mapping path="/admin/do/logout.html"/>
            &lt;!&ndash; 配置拦截器类&ndash;&gt;
            <bean class="com.atguigu.crowd.mvc.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->
</beans>